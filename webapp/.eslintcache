[{"C:\\Users\\soman\\OneDrive\\Documents\\Study\\NEU\\Third Sem\\INFO 6150\\Project\\INFO6150_Somanwita_Dey_Final_Project\\final-project-group-4\\webapp\\src\\components\\Dashboard.js":"1","C:\\Users\\soman\\OneDrive\\Documents\\Study\\NEU\\Third Sem\\INFO 6150\\Project\\INFO6150_Somanwita_Dey_Final_Project\\final-project-group-4\\webapp\\src\\components\\SideBar\\SideBar.js":"2","C:\\Users\\soman\\OneDrive\\Documents\\Study\\NEU\\Third Sem\\INFO 6150\\Project\\INFO6150_Somanwita_Dey_Final_Project\\final-project-group-4\\webapp\\src\\components\\Assignments\\CreateAssignments.js":"3"},{"size":1627,"mtime":1607884225219,"results":"4","hashOfConfig":"5"},{"size":2859,"mtime":1607889753619,"results":"6","hashOfConfig":"5"},{"size":3535,"mtime":1607889901185,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"qdjkev",{"filePath":"10","messages":"11","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"C:\\Users\\soman\\OneDrive\\Documents\\Study\\NEU\\Third Sem\\INFO 6150\\Project\\INFO6150_Somanwita_Dey_Final_Project\\final-project-group-4\\webapp\\src\\components\\Dashboard.js",["15","16","17","18","19","20","21"],"C:\\Users\\soman\\OneDrive\\Documents\\Study\\NEU\\Third Sem\\INFO 6150\\Project\\INFO6150_Somanwita_Dey_Final_Project\\final-project-group-4\\webapp\\src\\components\\SideBar\\SideBar.js",["22","23","24","25","26","27","28","29"],"C:\\Users\\soman\\OneDrive\\Documents\\Study\\NEU\\Third Sem\\INFO 6150\\Project\\INFO6150_Somanwita_Dey_Final_Project\\final-project-group-4\\webapp\\src\\components\\Assignments\\CreateAssignments.js",["30","31"],"import React, {Component} from 'react';\r\nimport {Form, FormGroup, FormControl, Button, FormLabel,} from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { createAssignment } from '../../store/actions/assignment.action';\r\nimport { removeError } from '../../store/actions/error.action';\r\nimport { logoutUser } from '../../store/actions/user.action';\r\n\r\nconst reduxProps = state => {\r\n  return ({\r\n    auth: state.user.authUser\r\n  })\r\n};\r\n\r\nclass CreateAssignments extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      assignmentname: '',\r\n      assignmentdescription: '',\r\n      assignmentstartdate: '',\r\n      assignmentenddate: '',\r\n      assignmentscrore: 0,\r\n      teacherid: '',\r\n      courseid: ''\r\n    };\r\n    this.submitForm = this.submitForm.bind(this);\r\n    this.handleInput = this.handleInput.bind(this);\r\n    this.getTeacherId = this.getTeacherId.bind(this);\r\n  }\r\n\r\n  getTeacherId(url)  {\r\n    fetch(url, {\r\n        method: 'GET'\r\n      })\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          this.setState({\r\n            teacherid: result\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            error\r\n        });\r\n      }\r\n    )\r\n  }\r\n\r\n  componentWillReceiveProps (newProps) {\r\n    console.log(\"newProps \" + newProps)\r\n    if (newProps.errorMesage == undefined) {\r\n        this.props.removeError()\r\n    } else {\r\n      alert(\"Redirect to Dashboard\");\r\n      this.props.history.push('/dashboard')\r\n    }\r\n  }\r\n\r\n  handleInput(e) {\r\n    let name = e.target.id\r\n    let val = e.target.value\r\n    this.setState({[name]: val})\r\n  }\r\n\r\n  submitForm(e){\r\n    e.preventDefault();\r\n    this.props.createAssignment(this.state);\r\n    //alert(\"Assignment is added successfully!\");\r\n  }\r\n\r\n  render(){\r\n    let userState = this.props.auth;\r\n    //console.log(userState.user._id);\r\n    let id = userState.user._id;\r\n    let url = \"/teachers/\" + id;\r\n    this.getTeacherId(url);\r\n\r\n\r\n    return(\r\n\r\n      <Form onSubmit={this.submitForm}>\r\n        <FormGroup controlId=\"assignmentname\">\r\n          <FormLabel>Assignment Name</FormLabel>\r\n          <FormControl type=\"text\" value={this.state.value} placeholder=\"Enter Assignment Name\" onChange={this.handleInput} />\r\n        </FormGroup>\r\n\r\n        <FormGroup controlId=\"assignmentdescription\">\r\n          <FormLabel>Assignment Description</FormLabel>\r\n          <FormControl type=\"text\" value={this.state.value} placeholder=\"Enter Assignment Name\" onChange={this.handleInput} />\r\n        </FormGroup>\r\n\r\n        <FormGroup controlId=\"assignmentstartdate\">\r\n          <FormLabel>Assignment Start Date</FormLabel>\r\n          <FormControl type=\"date\" value={this.state.value} placeholder=\"Enter Assignment Start Date\" onChange={this.handleInput} />\r\n        </FormGroup>\r\n\r\n        <FormGroup controlId=\"assignmentenddate\">\r\n          <FormLabel>Assignment End Date</FormLabel>\r\n          <FormControl type=\"date\" value={this.state.value} placeholder=\"Enter Assignment End Date\" onChange={this.handleInput} />\r\n        </FormGroup>\r\n\r\n        <FormGroup>\r\n          <Button type=\"submit\">Add Assignment</Button>\r\n        </FormGroup>\r\n      </Form>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n// const reduxProps = state => {\r\n//   return ({\r\n//     assignments: state.assignment.assignments,\r\n//     errorMesage: state.errors.message\r\n//   })\r\n// };\r\n\r\nexport default connect(reduxProps, { createAssignment, removeError })(CreateAssignments);\r\n",{"ruleId":"32","severity":1,"message":"33","line":6,"column":17,"nodeType":"34","messageId":"35","endLine":6,"endColumn":20},{"ruleId":"32","severity":1,"message":"36","line":6,"column":22,"nodeType":"34","messageId":"35","endLine":6,"endColumn":29},{"ruleId":"32","severity":1,"message":"37","line":9,"column":8,"nodeType":"34","messageId":"35","endLine":9,"endColumn":13},{"ruleId":"32","severity":1,"message":"38","line":11,"column":10,"nodeType":"34","messageId":"35","endLine":11,"endColumn":23},{"ruleId":"32","severity":1,"message":"39","line":11,"column":25,"nodeType":"34","messageId":"35","endLine":11,"endColumn":30},{"ruleId":"32","severity":1,"message":"40","line":14,"column":10,"nodeType":"34","messageId":"35","endLine":14,"endColumn":20},{"ruleId":"32","severity":1,"message":"41","line":17,"column":7,"nodeType":"34","messageId":"35","endLine":17,"endColumn":22},{"ruleId":"32","severity":1,"message":"38","line":3,"column":10,"nodeType":"34","messageId":"35","endLine":3,"endColumn":23},{"ruleId":"32","severity":1,"message":"39","line":3,"column":25,"nodeType":"34","messageId":"35","endLine":3,"endColumn":30},{"ruleId":"32","severity":1,"message":"37","line":4,"column":8,"nodeType":"34","messageId":"35","endLine":4,"endColumn":13},{"ruleId":"32","severity":1,"message":"42","line":64,"column":7,"nodeType":"34","messageId":"35","endLine":64,"endColumn":16},{"ruleId":"43","severity":1,"message":"44","line":69,"column":47,"nodeType":"45","messageId":"46","endLine":69,"endColumn":49},{"ruleId":"47","severity":1,"message":"48","line":71,"column":16,"nodeType":"49","messageId":"50","endLine":71,"endColumn":18},{"ruleId":"47","severity":1,"message":"48","line":77,"column":16,"nodeType":"49","messageId":"50","endLine":77,"endColumn":18},{"ruleId":"47","severity":1,"message":"48","line":83,"column":16,"nodeType":"49","messageId":"50","endLine":83,"endColumn":18},{"ruleId":"32","severity":1,"message":"40","line":6,"column":10,"nodeType":"34","messageId":"35","endLine":6,"endColumn":20},{"ruleId":"47","severity":1,"message":"48","line":55,"column":30,"nodeType":"49","messageId":"50","endLine":55,"endColumn":32},"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'NavItem' is defined but never used.","'Login' is defined but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'logoutUser' is defined but never used.","'reduxloginProps' is assigned a value but never used.","'userState' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]